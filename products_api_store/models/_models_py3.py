# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.0.6274, generator: {generator})
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Optional

import msrest.serialization


class ApiResponse(msrest.serialization.Model):
    """ApiResponse.

    :param code:
    :type code: int
    :param type:
    :type type: str
    :param message:
    :type message: str
    """

    _attribute_map = {
        'code': {'key': 'code', 'type': 'int'},
        'type': {'key': 'type', 'type': 'str'},
        'message': {'key': 'message', 'type': 'str'},
    }

    def __init__(
        self,
        *,
        code: Optional[int] = None,
        type: Optional[str] = None,
        message: Optional[str] = None,
        **kwargs
    ):
        super(ApiResponse, self).__init__(**kwargs)
        self.code = code
        self.type = type
        self.message = message


class Product(msrest.serialization.Model):
    """Product.

    :param id:
    :type id: long
    :param name:
    :type name: str
    :param inventory_count:
    :type inventory_count: int
    :param cost_per_unit:
    :type cost_per_unit: float
    """

    _attribute_map = {
        'id': {'key': 'id', 'type': 'long'},
        'name': {'key': 'name', 'type': 'str'},
        'inventory_count': {'key': 'inventoryCount', 'type': 'int'},
        'cost_per_unit': {'key': 'costPerUnit', 'type': 'float'},
    }

    def __init__(
        self,
        *,
        id: Optional[int] = None,
        name: Optional[str] = None,
        inventory_count: Optional[int] = None,
        cost_per_unit: Optional[float] = None,
        **kwargs
    ):
        super(Product, self).__init__(**kwargs)
        self.id = id
        self.name = name
        self.inventory_count = inventory_count
        self.cost_per_unit = cost_per_unit
